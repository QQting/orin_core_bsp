
/dts-v1/;
/plugin/;

/ {
	overlay-name = "Sensing Camera IMX490";
	jetson-header-name = "Jetson AGX CSI Connector";
	compatible = "nvidia,p3737-0000+p3701-0000", "nvidia,p3737-0000+p3701-0004", "nvidia,p3737-0000+p3701-0005";

	/* Enable VI ports */
	fragment@0 {
		target-path = "/tegra-capture-vi";
		__overlay__ {
			num-channels=<2>;
		};
	};
	fragment@1 {
		target-path = "/tegra-capture-vi/ports/port@0";
		__overlay__ {
			status = "okay";
		};
	};
	fragment@2 {
		target-path = "/tegra-capture-vi/ports/port@1";
		__overlay__ {
			status = "okay";
		};
	};
	fragment@3 {
		target-path = "/tegra-capture-vi/ports/port@0/endpoint";
		__overlay__ {
			status = "okay";
			vc-id = <0>;
			port-index = <0>;
			bus-width = <4>;
		};
	};
	fragment@4 {
		target-path = "/tegra-capture-vi/ports/port@1/endpoint";
		__overlay__ {
			status = "okay";
			vc-id = <1>;
			port-index = <0>;
			bus-width = <4>;
		};
	};

	/* Enable CSI ports */
	fragment@5 {
		target-path = "/host1x@13e00000/nvcsi@15a00000/channel@0";
		__overlay__ {
			status = "okay";
		};
	};
	fragment@6 {
		target-path = "/host1x@13e00000/nvcsi@15a00000/channel@0/ports/port@0";
		__overlay__ {
			status = "okay";
		};
	};
	fragment@7 {
		target-path = "/host1x@13e00000/nvcsi@15a00000/channel@0/ports/port@0/endpoint@0";
		__overlay__ {
			status = "okay";
			port-index = <0>;
			bus-width = <4>;
			remote-endpoint = <&imx490_out0>;
		};
	};
	fragment@8 {
		target-path = "/host1x@13e00000/nvcsi@15a00000/channel@0/ports/port@1";
		__overlay__ {
			status = "okay";
		};
	};
	fragment@9 {
		target-path = "/host1x@13e00000/nvcsi@15a00000/channel@0/ports/port@1/endpoint@1";
		__overlay__ {
			status = "okay";
			remote-endpoint = <&vi_in0>;
		};
	};
	fragment@10 {
		target-path = "/host1x@13e00000/nvcsi@15a00000/channel@1";
		__overlay__ {
			status = "okay";
		};
	};
	fragment@11 {
		target-path = "/host1x@13e00000/nvcsi@15a00000/channel@1/ports/port@0";
		__overlay__ {
			status = "okay";
		};
	};
	fragment@12 {
		target-path = "/host1x@13e00000/nvcsi@15a00000/channel@1/ports/port@0/endpoint@2";
		__overlay__ {
			status = "okay";
			port-index = <0>;
			bus-width = <4>;
			remote-endpoint = <&imx490_out1>;
		};
	};
	fragment@13 {
		target-path = "/host1x@13e00000/nvcsi@15a00000/channel@1/ports/port@1";
		__overlay__ {
			status = "okay";
		};
	};
	fragment@14 {
		target-path = "/host1x@13e00000/nvcsi@15a00000/channel@1/ports/port@1/endpoint@3";
		__overlay__ {
			status = "okay";
			remote-endpoint = <&vi_in1>;
		};
	};

	/* tegra-camera-platform settings */
	fragment@15 {
		target-path = "/tegra-camera-platform";
		__overlay__ {
			num_csi_lanes = <4>;
			max_lane_speed = <4000000>;
		};
	};
	fragment@16 {
		target-path = "/tegra-camera-platform/modules/module0";
		__overlay__ {
			status = "okay";
			badge = "imx490_rear";
			position = "rear";
			orientation = "1";
		};
	};
	fragment@17 {
		target-path = "/tegra-camera-platform/modules/module0/drivernode0";
		__overlay__ {
			status = "okay";
			pcl_id = "v4l2_sensor";
			devname = "imx490 30-001b";
			proc-device-tree = "/proc/device-tree/i2c@3180000/tca9546@70/i2c@0/imx490_a@1b";
		};
	};
	fragment@18 {
		target-path = "/tegra-camera-platform/modules/module1";
		__overlay__ {
			status = "okay";
			badge = "imx490_front";
			position = "front";
			orientation = "1";
		};
	};
	fragment@19 {
		target-path = "/tegra-camera-platform/modules/module1/drivernode0";
		__overlay__ {
			status = "okay";
			pcl_id = "v4l2_sensor";
			devname = "imx490 30-001c";
			proc-device-tree = "/proc/device-tree/i2c@3180000/tca9546@70/i2c@0/imx490_b@1c";
		};
	};

	/* pca9546 i2c mux */
	fragment@20 {
		target-path = "/i2c@3180000/tca9546@70";
		__overlay__ {
			status = "okay";
			vcc-pullup-supply = <0x2e>;
		};
	};

	fragment@21 {
		target-path = "/i2c@3180000/tca9546@70/i2c@0";
		__overlay__ {
			reg = <0>;
			i2c-mux,deselect-on-exit;
			#address-cells = <1>;
			#size-cells = <0>;

			gmsl_dser: gmsl_max96712@6b {
				compatible = "maxim,gmsl_max96712";
				status = "okay";
				reg = <0x6b>;
				csi-mode = "2x4";
				max-src = <4>;
			};
			gmsl_ser_prim: gmsl_max9295_prim@40 {
				compatible = "maxim,gmsl_max9295";
				status = "okay";
				reg = <0x40>;
				is-prim-ser;
			};
			gmsl_ser_a: gmsl_max9295_a@60 {
				compatible = "maxim,gmsl_max9295";
				status = "okay";
				reg = <0x60>;
				nvidia,gmsl-dser-device = <&gmsl_dser>;
			};
			gmsl_ser_b: gmsl_max9295_b@62 {
				compatible = "maxim,gmsl_max9295";
				status = "okay";
				reg = <0x62>;
				nvidia,gmsl-dser-device = <&gmsl_dser>;
			};

			imx490_a@1b {
				status = "okay";
				def-addr = <0x1a>;
				devnode = "video0";
				/* Define any required hw resources needed by driver */
				/* ie. clocks, io pins, power sources */
				clocks = <&bpmp 36U>,
						<&bpmp 36U>;
				clock-names = "extperiph1", "pllp_grtba";
				mclk = "extperiph1";
				nvidia,gmsl-ser-device = <&gmsl_ser_a>;
				nvidia,gmsl-dser-device = <&gmsl_dser>;
				power-supply = <&tegra_main_gpio 0xa7 0x00>; /* AC.07 */
				pwdn-gpio = <&tegra_main_gpio 0x3e 0x00>; /* PH.06 */
				sync-gpio = <&tegra_main_gpio 0x3b 0x00>; /* PH.03 */
				pwdn-gpio0 = <&tegra_main_gpio 0xa0 0x00>; /* AC.00 */
				pwdn-gpio1 = <&tegra_main_gpio 0xa1 0x00>; /* AC.01 */

				compatible = "sony,imx490";

				reg = <0x1b>;

				/* Physical dimensions of sensor */
				physical_w = "15.0";
				physical_h = "12.5";
				sensor_model = "imx490";

				/* Defines number of frames to be dropped by driver internally after applying */
				/* sensor crop settings. Some sensors send corrupt frames after applying */
				/* crop co-ordinates */
				post_crop_frame_drop = "0";

				/* Convert Gain to unit of dB (decibel) befor passing to kernel driver */
				use_decibel_gain = "true";

				/* enable CID_SENSOR_MODE_ID for sensor modes selection */
				use_sensor_mode_id = "true";

				mode0 {
					mclk_khz = "24000";
					num_lanes = "4";
					tegra_sinterface = "serial_a";
					vc_id = "0";
					discontinuous_clk = "no";
					dpcm_enable = "false";
					cil_settletime = "0";
					dynamic_pixel_bit_depth = "16";
					csi_pixel_bit_depth = "16";
					mode_type = "yuv";
					pixel_phase = "uyvy";

					active_w = "2880";
					active_h = "1860";
					readout_orientation = "0";
					line_length = "2250";
					inherent_gain = "1";
					pix_clk_hz = "300000000";
					serdes_pix_clk_hz = "375000000";

					gain_factor = "10";
					min_gain_val = "0"; /* dB */
					max_gain_val = "300"; /* dB */
					step_gain_val = "3"; /* 0.3 */
					default_gain = "0";
					min_hdr_ratio = "1";
					max_hdr_ratio = "1";
					framerate_factor = "1000000";
					min_framerate = "30000000";
					max_framerate = "30000000";
					step_framerate = "1";
					default_framerate = "30000000";
					exposure_factor = "1000000";
					min_exp_time = "59"; /*us, 2 lines*/
					max_exp_time = "33333";
					step_exp_time = "1";
					default_exp_time = "33333";/* us */
					embedded_metadata_height = "0";
				};
				ports {
					#address-cells = <1>;
					#size-cells = <0>;
					port@0 {
						reg = <0>;
						imx490_out0: endpoint {
							vc-id = <0>;
							port-index = <0>;
							bus-width = <4>;
							remote-endpoint = <&csi_in0>;
						};
					};
				};
				gmsl-link {
					src-csi-port = "b";
					dst-csi-port = "a";
					serdes-csi-link = "a";
					csi-mode = "1x4";
					st-vc = <0>;
					vc-id = <0>;
					num-lanes = <4>;
					streams = "ued-u1", "yuv8";
				};
			};

			imx490_b@1c {
				status = "okay";
				def-addr = <0x1a>;
				devnode = "video1";
				/* Define any required hw resources needed by driver */
				/* ie. clocks, io pins, power sources */
				clocks = <&bpmp 36U>,
						<&bpmp 36U>;
				clock-names = "extperiph1", "pllp_grtba";
				mclk = "extperiph1";
				nvidia,gmsl-ser-device = <&gmsl_ser_b>;
				nvidia,gmsl-dser-device = <&gmsl_dser>;
				power-supply = <&tegra_main_gpio 0xa7 0x00>; /* AC.07 */
				pwdn-gpio = <&tegra_main_gpio 0x3e 0x00>; /* PH.06 */
				sync-gpio = <&tegra_main_gpio 0x3b 0x00>; /* PH.03 */
				pwdn-gpio0 = <&tegra_main_gpio 0xa0 0x00>; /* AC.00 */
				pwdn-gpio1 = <&tegra_main_gpio 0xa1 0x00>; /* AC.01 */

				compatible = "sony,imx490";

				reg = <0x1c>;

				/* Physical dimensions of sensor */
				physical_w = "15.0";
				physical_h = "12.5";
				sensor_model = "imx490";

				/* Defines number of frames to be dropped by driver internally after applying */
				/* sensor crop settings. Some sensors send corrupt frames after applying */
				/* crop co-ordinates */
				post_crop_frame_drop = "0";

				/* Convert Gain to unit of dB (decibel) befor passing to kernel driver */
				use_decibel_gain = "true";

				/* enable CID_SENSOR_MODE_ID for sensor modes selection */
				use_sensor_mode_id = "true";

				mode0 {
					mclk_khz = "24000";
					num_lanes = "4";
					tegra_sinterface = "serial_b";
					vc_id = "1";
					discontinuous_clk = "no";
					dpcm_enable = "false";
					cil_settletime = "0";
					dynamic_pixel_bit_depth = "16";
					csi_pixel_bit_depth = "16";
					mode_type = "yuv";
					pixel_phase = "uyvy";

					active_w = "2880";
					active_h = "1860";
					readout_orientation = "0";
					line_length = "2250";
					inherent_gain = "1";
					pix_clk_hz = "300000000";
					serdes_pix_clk_hz = "375000000";

					gain_factor = "10";
					min_gain_val = "0"; /* dB */
					max_gain_val = "300"; /* dB */
					step_gain_val = "3"; /* 0.3 */
					default_gain = "0";
					min_hdr_ratio = "1";
					max_hdr_ratio = "1";
					framerate_factor = "1000000";
					min_framerate = "30000000";
					max_framerate = "30000000";
					step_framerate = "1";
					default_framerate = "30000000";
					exposure_factor = "1000000";
					min_exp_time = "59"; /*us, 2 lines*/
					max_exp_time = "33333";
					step_exp_time = "1";
					default_exp_time = "33333";/* us */
					embedded_metadata_height = "0";
				};
				ports {
					#address-cells = <1>;
					#size-cells = <0>;
					port@0 {
						reg = <0>;
						imx490_out1: endpoint {
							vc-id = <1>;
							port-index = <0>;
							bus-width = <4>;
							remote-endpoint = <&csi_in1>;
						};
					};
				};
				gmsl-link {
					src-csi-port = "b";
					dst-csi-port = "a";
					serdes-csi-link = "b";
					csi-mode = "1x4";
					st-vc = <0>;
					vc-id = <1>;
					num-lanes = <4>;
					streams = "ued-u1", "yuv8";
				};
			};
		};
	};
};
